% 《大数据挖掘：系统方法与实例分析》第8章配套程序，机械工业出版社，周英、卓金武、卞月青著。 
% 问题讨论： http://www.ilovematlab.com/forum-252-1.html
% 答疑方式： 70263215@qq.com

%% Import Existing Data
% Autogenerated code for reading
bank = ImportBankData('bank-full.csv');

%% Visualize Data
gscatter(bank.balance,bank.age,bank.y)

%% Prepare the Data: Response and Predictors
% Response
Y = bank.y;
% Predictor matrix
X = bank(:,1:end-1);

% Cross Validation
cv = cvpartition(height(bank),'holdout',0.40);

% Training set
Xtrain = X(training(cv),:);
Ytrain = Y(training(cv),:);
% Test set
Xtest = X(test(cv),:);
Ytest = Y(test(cv),:);

preparedata

%% Neural Networks
% Train the network

[~, net] = NNfun(XtrainNum,YtrainNum);


%% Make a prediction for the test set

Yscore = net(XtestNum')';
Ypred = round(Yscore);

%% How to measure model accuracy
% The first natural metric may be percent correctly labeled
pctCorrect = sum(Ypred == YtestNum)/length(YtestNum) * 100;
fprintf('Percent correctly classified: %0.2f%%\n', pctCorrect);

%% Compute the confusion matrix
% This assumes a cutoff or threshold of .5

C_nn = confusionmat(YtestNum,Ypred);
% Examine the confusion matrix for each class as a percentage of the true class
C_nn = dispConfusion(C_nn, 'Neural Net');

%% Confusion matrix with different threshold
% If we use a different threshold, the performance on "Yes" observations
% changes dramatically
Ypred2 = double(Yscore > .1);
C_nn2 = confusionmat(YtestNum,Ypred2);
% Examine the confusion matrix for each class as a percentage of the true class
C_nn2 = dispConfusion(C_nn2, 'Neural Net with threshold of .1');

%% Display the ROC

[rocx, rocy, roct, auc] = perfcurve(YtestNum, Yscore, 1);
plot(rocx, rocy);
title('Neural Network ROC for ''yes'''); grid on; 
xlabel('False Positive Rate [ = FP/(TN+FP)]'); 
ylabel('True Positive Rate [ = TP/(TP+FN)]');

fprintf('Neural Network Area Under Curve: %0.4f\n', auc);